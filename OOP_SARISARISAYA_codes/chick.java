/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package oop_database;

import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ADMIN
 */
public class chick extends javax.swing.JFrame {
    Connection con;

    /**
     * Creates new form chick
     */
    public chick() {
        initComponents();
        String url = "jdbc:mysql://localhost:3306/sarisarisaya";
        String user = "root";
        String pass = "";
        try{
            con = DriverManager.getConnection(url,user,pass);
        }catch(Exception ex){
            System.out.println("Error : " + ex.getMessage());
        }   
    }
    chickInv chickInv = new chickInv();
    
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        chicken_tble = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        viewtable = new javax.swing.JButton();
        chickinv = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        add = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        part = new javax.swing.JLabel();
        chickPart = new javax.swing.JTextField();
        chickenID = new javax.swing.JLabel();
        chickID = new javax.swing.JTextField();
        price = new javax.swing.JLabel();
        chickPrice = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        chicken_tble.setBackground(new java.awt.Color(251, 173, 112));
        chicken_tble.setFont(new java.awt.Font("Cooper Black", 0, 15)); // NOI18N
        chicken_tble.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "CHICKENID", "PART", "PRICE"
            }
        ));
        jScrollPane2.setViewportView(chicken_tble);

        jButton1.setFont(new java.awt.Font("Cooper Black", 0, 20)); // NOI18N
        jButton1.setText("BACK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        viewtable.setBackground(new java.awt.Color(255, 178, 213));
        viewtable.setFont(new java.awt.Font("Cooper Black", 0, 20)); // NOI18N
        viewtable.setText("VIEW TABLE");
        viewtable.setBorder(null);
        viewtable.setOpaque(false);
        viewtable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewtableActionPerformed(evt);
            }
        });

        chickinv.setBackground(new java.awt.Color(255, 178, 213));
        chickinv.setFont(new java.awt.Font("Cooper Black", 1, 20)); // NOI18N
        chickinv.setText("INVENTORY");
        chickinv.setBorder(null);
        chickinv.setOpaque(false);
        chickinv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chickinvActionPerformed(evt);
            }
        });

        edit.setBackground(new java.awt.Color(255, 178, 213));
        edit.setFont(new java.awt.Font("Cooper Black", 0, 15)); // NOI18N
        edit.setText("EDIT");
        edit.setBorder(null);
        edit.setOpaque(false);
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        add.setBackground(new java.awt.Color(255, 178, 213));
        add.setFont(new java.awt.Font("Cooper Black", 0, 15)); // NOI18N
        add.setText("ADD");
        add.setBorder(null);
        add.setOpaque(false);
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        delete.setBackground(new java.awt.Color(255, 178, 213));
        delete.setFont(new java.awt.Font("Cooper Black", 0, 15)); // NOI18N
        delete.setText("DELETE");
        delete.setBorder(null);
        delete.setOpaque(false);
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        part.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 20)); // NOI18N
        part.setText("PART:");

        chickPart.setFont(new java.awt.Font("Cooper Black", 0, 15)); // NOI18N
        chickPart.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        chickPart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chickPartActionPerformed(evt);
            }
        });

        chickenID.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 20)); // NOI18N
        chickenID.setText("CHICKEN ID:");

        chickID.setFont(new java.awt.Font("Cooper Black", 0, 15)); // NOI18N
        chickID.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        chickID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chickIDActionPerformed(evt);
            }
        });

        price.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 20)); // NOI18N
        price.setText("PRICE:");

        chickPrice.setFont(new java.awt.Font("Cooper Black", 0, 15)); // NOI18N
        chickPrice.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        chickPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chickPriceActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Cooper Black", 1, 50)); // NOI18N
        jLabel4.setText("CHICKEN");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/CHICKENTBL.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1480, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addGap(580, 580, 580)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(370, 370, 370)
                .addComponent(chickID, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(120, 120, 120)
                .addComponent(chickPart, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100)
                .addComponent(price)
                .addGap(7, 7, 7)
                .addComponent(chickPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(480, 480, 480)
                .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(edit, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(430, 430, 430)
                .addComponent(viewtable, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(130, 130, 130)
                .addComponent(chickinv, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(1339, 1339, 1339)
                .addComponent(jButton1))
            .addGroup(layout.createSequentialGroup()
                .addGap(630, 630, 630)
                .addComponent(part))
            .addGroup(layout.createSequentialGroup()
                .addGap(230, 230, 230)
                .addComponent(chickenID))
            .addGroup(layout.createSequentialGroup()
                .addGap(800, 800, 800)
                .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 1480, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chickID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chickPart, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(price)
                    .addComponent(chickPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(90, 90, 90)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(viewtable, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chickinv, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(layout.createSequentialGroup()
                .addGap(822, 822, 822)
                .addComponent(jButton1))
            .addGroup(layout.createSequentialGroup()
                .addGap(550, 550, 550)
                .addComponent(part))
            .addGroup(layout.createSequentialGroup()
                .addGap(550, 550, 550)
                .addComponent(chickenID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(640, 640, 640)
                .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jLabel2)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        

    private void chickIDActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    }                                       

    private void chickPartActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    private void chickPriceActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void addActionPerformed(java.awt.event.ActionEvent evt) {                                    
        // TODO add your handling code here:
        String sql ="INSERT INTO chicken_Table"
        + "(`ChickenID`, `ChickenPart`, `ChickenPrice`)"
        +"VALUES (?,?,?)";
        try{
            PreparedStatement pst  = con.prepareStatement(sql);

            DefaultTableModel model = (DefaultTableModel) chicken_tble.getModel();

            pst.setString(1,chickID.getText());
            pst.setString(2,chickPart.getText());
            pst.setString(3,chickPrice.getText());
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Inserted Successfully");

        } catch (SQLException | HeadlessException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }                                   

    private void editActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
        String sql = "UPDATE chicken_table SET ChickenPart =?, ChickenPrice =? WHERE ChickenID =? ";
        try {
            PreparedStatement pst = con.prepareStatement(sql);
            
            DefaultTableModel model = (DefaultTableModel) chicken_tble.getModel();
            
            pst.setString(3,chickID.getText());
            pst.setString(1,chickPart.getText());
            pst.setString(2,chickPrice.getText());
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "UPDATE Successfully");
        } catch (HeadlessException | SQLException ex) {
           JOptionPane.showMessageDialog(null, ex);
        }
    }                                    

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
         String sql ="DELETE FROM `chicken_table` WHERE  ChickenID =?";
        try{

            PreparedStatement pst  = con.prepareStatement(sql);

            DefaultTableModel model = (DefaultTableModel) chicken_tble.getModel();

            pst.setString(1,chickID.getText());
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "DELETED Successfully");

        } catch (SQLException | HeadlessException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }  
    }                                      

    private void viewtableActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
         String sql = "SELECT * FROM  CHICKEN_TABLE";
        try{
            PreparedStatement pst = con.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            DefaultTableModel model = (DefaultTableModel) chicken_tble.getModel();
            model.setRowCount(0);
            while(rs.next()){
                model.addRow(new String[]{rs.getString(1), rs.getString(2), rs.getString(3)});
            }
        }catch(SQLException ex){
            System.out.println("Error : " +ex.getMessage());
        }
    }                                         

    private void chickinvActionPerformed(java.awt.event.ActionEvent evt) {                                         
    chickInv.setVisible(true);
    }                                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        categ categ = new categ();
        categ.setVisible(true);
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(chick.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(chick.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(chick.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(chick.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new chick().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton add;
    private javax.swing.JTextField chickID;
    private javax.swing.JTextField chickPart;
    private javax.swing.JTextField chickPrice;
    private javax.swing.JLabel chickenID;
    private javax.swing.JTable chicken_tble;
    private javax.swing.JButton chickinv;
    private javax.swing.JButton delete;
    private javax.swing.JButton edit;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel part;
    private javax.swing.JLabel price;
    private javax.swing.JButton viewtable;
    // End of variables declaration                   

    private static class con {

        public con() {
        }
    }
}
